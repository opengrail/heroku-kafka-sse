<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1478897986005">{:repl-history {:ide [], :local [&quot;(doseq [[n v] marshalling-config] (println n v))&quot; &quot;(def marshalling-config {\&quot;key.serializer\&quot;   (str StringSerializer)\n                         \&quot;value.serializer\&quot; (str StringSerializer)})\n&quot; &quot;(doseq [[n v] marshalling-config] (.setProperty brokers n v))&quot; &quot;(def foo (doseq [[n v] marshalling-config] (.setProperty brokers n v)))&quot; &quot;(merge brokers marshalling-config)&quot; &quot;(str StringSerializer)&quot; &quot;(println StringSerializer)&quot; &quot;(StringSerializer)&quot; &quot;(.class StringSerializer)&quot; &quot;(.toString StringSerializer)&quot; &quot;(.asSubclass StringSerializer)&quot; &quot;(class StringSerializer)&quot; &quot;(Class/getCanonicalName StringSerializer)&quot; &quot;(.getCanonicalName StringSerializer)&quot; &quot;brokers&quot; &quot;(type brokers)&quot; &quot;(heroku-kafka/kafka-connection-config)&quot; &quot;(def brokers (heroku-kafka/kafka-connection-config))&quot; &quot;(merge marshalling-config brokers)&quot; &quot;(def ^:private marshalling-config {\&quot;key.serializer\&quot;   StringSerializer\n                                   \&quot;value.serializer\&quot; StringSerializer})&quot; &quot;(def ^:private marshalling-config {\&quot;key.serializer\&quot;   StringSerializer\n                                   \&quot;value.serializer\&quot; StringSerializer})\n&quot; &quot;(kafka-connection-config)&quot; &quot;(def marshalling-config {\&quot;key.serializer\&quot;   StringSerializer\n                         \&quot;value.serializer\&quot; StringSerializer})\n&quot; &quot;(kafka-connection-config marshalling-config)&quot; &quot;(def foo (kafka-connection-config))&quot; &quot;foo&quot; &quot;(merge foo marshalling-config)&quot; &quot;(type foo)&quot; &quot;(type marshalling-config)&quot; &quot;(as-properties marshalling-config )&quot; &quot;marshalling-config&quot; &quot;(doseq [[n v] marshalling-config] (println \&quot;N\&quot; n \&quot;V\&quot; v))&quot; &quot;(doseq [[n v] foo] (println \&quot;N\&quot; n \&quot;V\&quot; v))&quot; &quot;(-main)&quot; &quot;(http/start-server handler {:port port})&quot; &quot;(.stop server)&quot; &quot;(http/start-server handler {:port 5000})&quot; &quot;(def server (-main))&quot;], :remote []}}</component>
</project>